@page "/Usuarios"

@using BLL
@using Models
@using Blazored.Toast
@using Blazored.Toast.Services


@inject IToastService toast

<EditForm Model="Usuarios" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card" style="align-self:center">

        <div class="card-header" style="background-color: #79CAFF; text-align: center">
            <h3>Registro de Usuarios</h3>
        </div>


        <div class="card-body">
            <div class="container">
                <div class="row d-flex justify-content-center">
                    <form>
                        @*UsuarioId*@
                        <div class="form-row">
                            <div class="col">
                                <div class="form-inline">
                                    <label><strong>Id</strong></label>
                                    <hr />
                                    <div class="input-group">
                                        <InputNumber @bind-Value="Usuarios.UsuarioId" class="form-control" size=40 style="width:300px" />
                                        <div class="input-group-append">
                                            <button type="button" class="btn btn-toolbar input-group-text" @onclick="Buscar"><span class="oi oi-magnifying-glass mr-2"></span>Buscar</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br />

                        @*Username*@
                        <div class="form-row">
                            <div class="col">
                                <div class="form-inline">
                                    <label><strong>Username </strong></label>
                                    <hr />
                                    <div class="input-group">
                                        <InputText required @bind-Value="Usuarios.Username" class="form-control" size=40 style="width:400px" />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br />

                        @*Contraseña*@
                        <div class="form-row">
                            <div class="col">
                                <div class="form-inline">
                                    <label><strong>Password </strong></label>
                                    <hr />
                                    <div class="input-group">
                                        <InputText required @bind-Value="Usuarios.Contraseña" class="form-control" size=40 style="width:400px" />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card-footer" style="text-align:center">
                            <div class="form-group text-center" display: inline-block>
                                <button type="button" class="btn btn-outline-primary" @onclick="Nuevo"><span class="oi oi-file mr-2"></span>Nuevo</button>
                                &nbsp;&nbsp;
                                <button type="button" class="btn btn-outline-primary" @onclick="Guardar"><span class="oi oi-account-login mr-2"></span>Guardar</button>
                                &nbsp;&nbsp;
                                <button type="button" class="btn btn-outline-primary" @onclick="Eliminar"><span class="oi oi-trash mr-2"></span>Eliminar</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int UsuarioId { get; set; }



    public Usuarios Usuarios { get; set; }



    public string Username { get; set; }



    public string Contraseña { get; set; }



    protected override void OnInitialized()
    {
        base.OnInitialized();
        Nuevo();
        Buscar();
    }



    public void Nuevo()
    {
        Usuarios = new Usuarios();
        UsuarioId = 0;
        Username = string.Empty;
        Contraseña = string.Empty;
    }




    public void Buscar()
    {
        if (Usuarios.UsuarioId > 0)
        {
            var encontrado = UsuariosBLL.Buscar(Usuarios.UsuarioId);
            if (encontrado != null)
            {
                this.Usuarios = encontrado;
            }
            else
            {
                toast.ShowWarning("No Encontrado");
            }
        }
    }



    public void Guardar()
    {
        bool guardo;

        guardo = UsuariosBLL.Guardar(Usuarios);

        if (guardo)
        {
            Nuevo();
            toast.ShowSuccess("Guardado correctamente");
        }
        else
        {
            toast.ShowError("No se pudo guardar.");
        }
    }



    public void Eliminar()
    {
        bool elimino;

        elimino = UsuariosBLL.Eliminar(Usuarios.UsuarioId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
        {
            toast.ShowError("No se pudo eliminar.");
        }
    }
}

